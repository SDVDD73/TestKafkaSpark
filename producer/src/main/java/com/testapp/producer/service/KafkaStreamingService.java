package com.testapp.producer.service;import com.testapp.producer.config.KafkaProperties;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.kafka.core.KafkaTemplate;import org.springframework.scheduling.annotation.Scheduled;import org.springframework.stereotype.Service;@Service@Slf4j@RequiredArgsConstructorpublic class KafkaStreamingService {    private static final long FIXED_DELAY_IN_MSEC = 1_000L;    private static final long INITIAL_DELAY_IN_MSEC = 1_000;    private final KafkaTemplate<String, String> kafkaTemplate;    private final KafkaProperties kafkaProperties;    private Long msgCount = 0L;    @Scheduled(fixedDelay = FIXED_DELAY_IN_MSEC, initialDelay = INITIAL_DELAY_IN_MSEC)    public void stream() {        String topic = kafkaProperties.getTemplate().getDefaultTopic();        String key = "key";        String payload = String.format("{\"name\"=\"%s\", \"value\"=%d}", "name" + msgCount, msgCount);        msgCount++;        log.info("sending payload: '{}' to topic: '{}' with key: '{}'", payload, topic, key);        kafkaTemplate.send(topic, key, payload);    }}